##############
##  KROW  ##
##############

##############
##  Common  ##
##############
export GOPATH=$HOME/golang

# curl -O https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
source ~/.git-completion.bash

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000000
HISTFILESIZE=2000000
HISTCONTROL=ignoredups:ignorespace

#export LANG=fi_FI.utf8
# for fixing the stupid konsole ctrl-q/s thingy:
stty -ixon
export CONFIG_SCHED_AUTOGROUP=y


shopt -s histappend
# history on all terminals everywhere (http://briancarper.net/blog/248/)
export PROMPT_COMMAND="history -a"


## ssh options:
##-o TCPKeepAlive=yes -o ServerAliveInterval=4

############
##  Path  ##
############

export ANDROID_HOME=$HOME/Library/Android/sdk
export ANDROID_NDK_HOME=$HOME/Library/Android/sdk/ndk-bundle

export PATH=$HOME/.bin:/usr/local/bin:/usr/bin:/usr/local/git/bin:/usr/local/sbin/:/usr/local/mysql/bin:$PATH:$ANDROID_HOME/build-tools/23.0.1/:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$ANDROID_NDK_HOME:$HOME/.rvm/bin:$GOPATH/bin

alias unset_py="unset PYTHONPATH"
alias python_3="unset PYTHONPATH && export PYTHONPATH='/usr/local/lib/python3.6/site-packages/'"
alias python_2="unset PYTHONPATH && export PYTHONPATH='/usr/local/lib/python2.7/site-packages/'"


#############
##  Alias  ##
#############

## setup prompt
export PS1='\[$(tput setaf 7)\][\[$(tput setaf 41)\]\W\[$(tput setaf 7)\]] $\[$(tput sgr0)\] '
alias sPS="PS1='[\[\033[01;33m\]\u@\h\[\033[00m\]]:\[\033[01;31m\]\W\[\033[00m\]\$ '"
alias lPS="PS1='[\[\033[01;31m\]\w\[\033[00m\]]\$ '"

alias tsaver='j=0;a=1;x=1;y=1;xd=1;yd=1;while true;do for i in {1..2000} ; do if [[ $x == $LINES || $x == 0 ]]; then xd=$(( $xd *-1 )) ; fi ; if [[ $y == $COLUMNS || $y == 0 ]]; then yd=$(( $yd * -1 )) ; fi ; x=$(( $x + $xd )); y=$(( $y + $yd )); printf "\33[%s;%sH\33[48;5;%sm . \33[0m" $x $y $(( $a % 8 + 16 + $j % 223 )) ;a=$(( $a + 1 )) ; done ; x=$(( x%$COLUMNS + 1 )) ; j=$(( $j + 8 )) ;done'

function git_author_stats {
    author=$1
    git log --author="${author}" --pretty=tformat: --numstat \
        | gawk "{ add += \$1 ; subs += \$2 ; loc += \$1 - \$2 } END { printf \"Author: ${author} added lines: %s removed lines: %s total lines: %s\n\",add,subs,loc }" -
}

alias tags="find . -name "*.py" -exec etags -a {} \;"
alias tags_ruby="ripper-tags --tag-file TAGS -R --exclude=ign_* --exclude=patches --exclude=tests* --exclude=temp --exclude=image* --exclude=coverage --exclude=object*"
alias tags_java="find . -name \"*.java\" -exec etags -o JTAGS -a {} \;"
alias tags_c="ctags -e -a --Ruby-kinds=-fF -o TAGS -R ."
alias tags_py="find . -name \"*.py\" -exec etags -o PTAGS -a {} \;"
alias find_cpp_files="find . -type f -name '*.h' -o  -name '*.cpp'"

alias t="tmux"


# docker
alias docker_clean_images='docker rmi $(docker images -a --filter=dangling=true -q)'
alias docker_clean_ps='docker rm $(docker ps --filter=status=exited --filter=status=created -q)'
alias docker_clean_cache='docker rmi $(docker images -a -q)'

# start OSX screensaver
alias ssaver="open -a /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app"

alias open_ports="sudo lsof -iTCP -sTCP:LISTEN -n -P"

# idevice / adb
alias id_l="idevice_id -l"
alias ad_d="adb devices"
alias ad_start="adb kill-server && adb start-server"
alias sim_booted="echo "$(xcrun simctl list | grep -i booted | awk '{print $3}' | tr -d '(|)')""

# keychain stuff
alias list_kc="security list-keychains"
alias unlock_kc="security unlock-keychain"

alias df='df -h'
alias du='du -h'


# ls
alias ll='ls -lFhG'
alias llh='ls -lhFG'
alias la='ls -AhG'
alias lad='la -d */'
alias l='ls -A1FG'
alias lt='ll -t'

#unity
alias unity="/Applications/Unity/Unity.app/Contents/MacOS/Unity"
alias unity_logs="cd ~/Library/Logs/Unity && tail -F *"
#alias xbuild="/Applications/Unity/MonoDevelop.app/Contents/Frameworks/Mono.framework/Commands/xbuild"
#alias mcs="/Applications/Unity/MonoDevelop.app/Contents/Frameworks/Mono.framework/Versions/2.10.11/bin/mcs"
#alias mono="/Applications/Unity/MonoDevelop.app/Contents/Frameworks/Mono.framework/Versions/2.10.11/bin/mono"


## mvn generate eclipse
alias mvn_eclipse='mvn eclipse:eclipse -DdownloadJavadocs=true -DdownloadSources=true'

## java7/8
#export JAVA_HOME=$(/usr/libexec/java_home)
#alias java_7="unset JAVA_HOME && export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/"
#alias java_8="export JAVA_HOME=$(/usr/libexec/java_home)"

function start_docker_dep_containers {
    local prefix=""
    if [ $# -eq 0 ]; then
        prefix="${PWD##*/}"
    else
        prefix=$1
    fi

    docker run -d --name=mongo-${prefix}  mongo:3
    docker run -d --name=redis-${prefix} --net=container:mongo-${prefix} redis:3
    docker run -d --name=nats-${prefix} --net=container:mongo-${prefix} nats:0.9.6
}

# find
function find_d {
    if [ $# -gt 1 ]; then
        find $2 -type d -iname $1
    else
        find . -type d -iname $1
    fi
}

function find_f {
    if [ $# -gt 1 ]; then
        find $2 -iname "$1"
    else
        find . -iname "$1"
    fi
}

# find_fr usage: regex (find options e.g. print0 -xargs ..)
# e.g. find_fr ".*\.cs" -print0
function find_fr {
    echo searching: $1
    echo find_options: ${@:2:($#)}
    echo "-----------------------------------------"
    find . -iregex "$1" ${@:2:($#)}
}

## find_fg usage:  filePattern (location) grepPattern
function find_fg {
    echo searching: ${@:1:($#-1)}
    echo grepping: ${@:($#)}
    echo "-----------------------------------------"
    find_fr ${@:1:($#-1)} -exec /usr/bin/grep -nri --color=auto "${@:($#)}" {} \;
}

## find and pass it to other command
## find_fa usage: find_fa "some_file.cpp" "git logp"
function find_fa {
    if [ ! $# -gt 1 ]; then
        echo "find_fa: too few args '$*' passed."
        return -1
    fi
    echo "Finding files matching: '${@:1:($#-1)}' and passing to command '${@:($#)}'"
    find_f "${@:1:($#-1)}" | xargs -n1 ${@:($#)}
}


function treetree {
    SEDMAGIC='s;[^/]*/;|____;g;s;____|; |;g'

    if [ "$#" -gt 0 ] ; then
        dirlist="$@"
    else
        dirlist="."
    fi

    for x in $dirlist; do
        find "$x" -print | sed -e "$SEDMAGIC"
    done
}

alias treeish=treeish
function treeish {
    if [ "$1" != "" ]
    then
        cd "$1"
    fi
    ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
# 1st sed: remove colons
# 2nd sed: replace higher level folder names with dashes
# 3rd sed: indent graph three spaces
# 4th sed: replace first dash with a vertical bar
    if [ `ls -F -1 | grep "/" | wc -l` = 0 ] # check if no folders
    then
        echo " -> no sub-directories"
    fi
    cd - > /dev/null 1>&1
}

alias his="history -n; history -a"

alias emacs="emacs-25.1"
export EDITOR='emacs'
alias e='emacs'
alias ec='emacsclient'
alias editrc='e ~/.bashrc'
alias editssh='e ~/.ssh/known_hosts'
alias editreadme='e ~/README'
alias editgit='e ~/.gitconfig'
alias editemacs='e ~/.emacs'
alias journal='e ~/GoogleDrive/work_log'

alias viewrc='less ~/.bashrc'
alias readme='less ~/README'

alias vg="vagrant global-status"

alias c='cd ~/code/'
alias gd="cd ~/GoogleDrive/"
alias cgd='gd && cd code'
alias go_code='cd $GOPATH'


alias p='cd -'
alias b='cd ..'
alias bb='cd ../..'
alias bbb='cd ../../..'
alias bbbb='cd ../../../..'

# svn
alias svndiff='svn diff | less'
#svnmod:
alias svnmod="svn status | /usr/bin/grep --color=auto -E '^M|^C|^A|^D|^R|^!'"
alias svnlog='svn log |less'
#svn revision for git
alias setsvn='SVN_REV=`git svn info | grep ^Revision | cut -d\  -f2` && echo r$SVN_REV'


# git
alias gitp='git --no-pager'
alias gsr='git svn rebase'
alias gl='git log'
alias gls='git logs'
alias glp='git logp'
alias gl2='git lg'
alias gl3='git lg2'
alias gup='git upglogp'
alias gucl='git conflog'
alias gusl='git srclog'
alias gs='git s'
alias gco='git co'
alias gsl='git sl'
alias gss='git ss'
alias gp='git gp'
alias gcp='git cp'

alias s='byobu'
## #gis. Create new screen.. Dont ask why this works.. Add '-S _screen_name_' when calling this..
alias sn='byobu -c /usr/share/byobu/profiles/byoburc'



############
##  Grep  ##
############

## About grep: to exclude dir use
#### alias grep = grep --exclude-dir='some/folder*' -ri
#grep options:
#because we have antique grep which doesn't have "exclude-dir" we have to take off "entries"
#GREP_OPTIONS="-rI --color --exclude="\*.svn\*" --exclude="*.*~" --exclude="*.*#" --exclude="*entries*""
#export GREP_OPTIONS
#GREP_COLOR=37
#export GREP_COLOR
#--exclude-dir='' needs to be first grep option inorder it to work
#alias grep="grep -nH -ri --color=auto"
alias egrep="grep -nH -ri --color=auto"
alias fgrep="grep -nH -ri --color=auto"
alias g="grep -nH -i --color=auto"
alias gr="grep -nH -ir --color=auto"
alias gv="grep -v -i --color=auto"
alias gi="grep -nH -i --color=auto"

alias xg="xargs -n1"
######################
##  Man-pages|less  ##
######################

LESSPIPE=/usr/local/bin/src-hilite-lesspipe.sh
export LESSOPEN="| ${LESSPIPE} %s"
export LESS='-R'
export LESS=' -R -i'

alias lessl='less -N'

#man pages with color.
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m' # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
#less with colours:
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
