##############
##   KROW   ##
##############
test -f ${HOME}/.krow.rc && source ${HOME}/.krow.rc

##############
##  Common  ##
##############
#export GOPATH=$HOME/golang

# Autocompletes
# [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

# curl -O https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
source ~/.git-completion.bash

# swift
## swift package completion-tool generate-bash-script > ~/.swift-package-complete.bash
source ~/.swift-package-complete.bash

# pip
## pip completion --bash >> ~/.pip-complete.bash
source ~/.pip-complete.bash

# poetry
## poetry completions bash > .poetry.bash-completion
source ~/.poetry.bash-completion

# tmux
[ -f /opt/homebrew/etc/bash_completion.d/tmux ] && . /opt/homebrew/etc/bash_completion.d/tmux

# brew
[ -f /opt/homebrew/etc/bash_completion.d/brew ] && . /opt/homebrew/etc/bash_completion.d/brew

# disable the bash session mumbo jumbo and use one history file, also
##               touch ~/.bash_sessions_disable
export SHELL_SESSION_HISTORY=0
# BASH History
export HISTSIZE=1000000
export HISTFILESIZE=2000000
export HISTCONTROL=ignoredups:ignorespace
shopt -s histappend

export PROMPT_COMMAND=log_history
alias his="history -n; history -a"

shopt -s checkwinsize

#export PYTHONSTARTUP=~/.pythonrc

# pipenv
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PIPENV_VENV_IN_PROJECT=1

export VENVS_PATH=${HOME}/.virtualenvs


# brew
alias brew86="arch -x86_64 /usr/local/homebrew/bin/brew"

# arm brew
#export HOMEBREW_PREFIX_86=/usr/local
export HOMEBREW_PREFIX="/opt/homebrew"
export HOMEBREW_CELLAR="/opt/homebrew/Cellar"
export HOMEBREW_REPOSITORY="/opt/homebrew"
export HOMEBREW_SHELLENV_PREFIX="/opt/homebrew"

export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:"
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}"

#eval "$(/opt/homebrew/bin/brew shellenv)"

############
##  Path  ##
############

# openssl
SSL_PATH="${HOMEBREW_PREFIX}/opt/openssl/bin/"
export PKG_CONFIG_PATH="${HOMEBREW_PREFIX}/opt/openssl@1.1/lib/pkgconfig"

# x86
SSL_PATH_86="/usr/local/opt/openssl/bin"
export PKG_CONFIG_PATH_86="/usr/local/opt/openssl@1.1/lib/pkgconfig"

LLVM_PATH=/usr/local/opt/llvm/bin/

# Set PATH
export PATH=${SSL_PATH}:${PATH}
export PATH=${LLVM_PATH}:${PATH}
export PATH=$HOME/.bin:${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/lib:${HOMEBREW_PREFIX}/sbin:${HOMEBREW_PREFIX}/include:${PATH}

#############
##  Alias  ##
#############

## setup prompt

## org
#export PS1="\[\033[38;5;208m\][\[$(tput sgr0)\]\[\033[38;5;136m\]\W\[$(tput sgr0)\]\[\033[38;5;208m\]]\[$(tput sgr0)\] \[$(tput sgr0)\]\[\033[38;5;228m\]⤳ \[$(tput sgr0)\] \[$(tput sgr0)\]"
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}
set_git_branch() {
    if [ -n "$(parse_git_branch)" ]; then
        echo "@$(parse_git_branch)"
    fi
}
export PS1="╭─╼[\\[$(tput setaf 154)\]\w\[\e[0m\]](\[$(tput setaf 107)\]\h\[\e[0m\])\n╰─\[$(tput setaf 91)\]\$(set_git_branch)\[\e[0m\] ⤳ "

alias PS1_kw="\[\033[38;5;228m\]\h\[$(tput sgr0)\]:\[$(tput sgr0)\]\[\033[38;5;184m\][\[$(tput sgr0)\]\[\033[38;5;100m\]\W\[$(tput sgr0)\]\[\033[38;5;184m\]]\[$(tput sgr0)\] \[$(tput sgr0)\]\[\033[38;5;228m\]> \[$(tput sgr0)\] \[$(tput sgr0)\]"
alias PS1_old='\[$(tput setaf 11)\][\[$(tput setaf 137)\]\W\[$(tput setaf 11)\]] ⤳  \[$(tput sgr0)\]'
alias hPS="PS1='\[\033[01;30m\]\h\[\033[00m\]:[\[\033[01;37m\]\W\[\033[00m\]] ⤳  '"
alias sPS="PS1='[\[\033[01;33m\]\u@\h\[\033[00m\]]:\[\033[01;31m\]\W\[\033[00m\]\⤳  '"
alias lPS="PS1='[\[\033[01;31m\]\w\[\033[00m\]]⤳  '"

alias reload="source ~/.bashrc"

alias t="tmux"
alias d="deactivate"

export EDITOR='emacs'
alias e='emacs'
alias ec='emacsclient'
alias editrc='e ~/.bashrc'
alias editgit='e ~/.gitconfig'
alias editemacs='e ~/.emacs'
alias ssh='ssh -o TCPKeepAlive=yes -o ServerAliveInterval=4'

alias p='cd -'
alias b='cd ..'
alias bb='cd ../..'
alias bbb='cd ../../..'
alias bbbb='cd ../../../..'

# GIT
alias gitp='git --no-pager'

# docker
alias docker-clean-images='docker rmi $(docker images -a --filter=dangling=true -q)'
alias docker-clean-ps='docker rm $(docker ps --filter=status=exited --filter=status=created -q)'
alias docker-clean-cache='docker rmi $(docker images -a -q)'
alias docker-build-dev='docker build -t $(echo "$(basename $(pwd))-dev") .'

# start OSX screensaver
alias ssaver="open -b com.apple.ScreenSaver.Engine"

alias open-ports="sudo lsof -iTCP -sTCP:LISTEN -n -P"

alias df='df -h'
alias du='du -h'

# ls
alias ls='ls --color=always'
alias ll='ls -lFh --color=always'
alias la='ls -Ah --color=always'
alias lad='la -d */'
alias l='ls -A1F --color=always'
alias lt='ll -t --color=always'
alias lh='ls -Ap --color=always | egrep "^\..*/$"' # hidden dirs only

alias tree='tree -C'

alias list-venvs='ls ${VENVS_PATH}'

# terminal.app
alias term_rand_col='osascript -e "tell application \"Terminal\" to set current settings of front window to some settings set"'

function log_history () {
    history -a
    # https://spin.atomicobject.com/2016/05/28/log-bash-history/
    if [ "$(id -u)" -ne 0 ]; then
        echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history 1)" >> ~/.logs-bash/bash-history-$(date "+%Y-%m-%d").log
    fi
}

function forever {
    local cmd=${@}

    echo "**forever** '${cmd}'"
    while true; do eval ${cmd}; done
}

function repeat_5 {
    local cmd=${@}
    local times=5

    for i in $(seq ${times}); do eval '${cmd}'; sleep 1; done
}

function repeat {
    local cmd=${@}

    while true; do eval '${cmd}'; sleep 1; done
}

function a {
    # check does local venv exist if dir arg is passed
    if [ -z "${1}" ]; then
        if [ -d .venv ]; then
            source .venv/bin/activate
        fi
    fi
    if [ -d "${1}" ]; then
        source "${1}/bin/activate"
    fi

    if [ -d "${VENVS_PATH}/${1}" ]; then
        source "${VENVS_PATH}/${1}/bin/activate"
    fi
}

function py-run-checks {
    local against="${@:1}"
    echo "** Running pycodestyle ${against} **"
    pycodestyle ${against}
    echo "** Running flake8 ${against} **"
    flake8 ${against}
    echo "** Running mypy ${against} **"
    mypy ${against}
}

function ls-dirs {
    local path=$1
    if [ -z ${path} ]; then
        path="*/"
    else
        path+="*/"
    fi
    ls -d ${path}
}

# find
function find_d {
    if [ $# -gt 1 ]; then
        find $2 -type d -iname $1
    else
        find . -type d -iname $1
    fi
}

function find_f {
    if [ $# -gt 1 ]; then
        find $2 -iname "$1"
    else
        find . -iname "$1"
    fi
}

# find_fr usage: regex (find options e.g. print0 -xargs ..)
# e.g. find_fr ".*\.cs" -print0
function find_fr {
    echo searching: $1
    echo find_options: ${@:2:($#)}
    echo "-----------------------------------------"
    find . -iregex "$1" ${@:2:($#)}
}

## find_fg usage:  filePattern (location) grepPattern
function find_fg {
    echo searching: ${@:1:($#-1)}
    echo grepping: ${@:($#)}
    echo "-----------------------------------------"
    find_fr ${@:1:($#-1)} -exec /usr/bin/grep -nri --color=auto "${@:($#)}" {} \;
}

## find and pass it to other command
## find_fa usage: find_fa "some_file.cpp" "git logp"
function find_fa {
    if [ ! $# -gt 1 ]; then
        echo "find_fa: too few args '$*' passed."
        return -1
    fi
    echo "Finding files matching: '${@:1:($#-1)}' and passing to command '${@:($#)}'"
    find_f "${@:1:($#-1)}" | xargs -n1 ${@:($#)}
}

function git_author_stats {
    author=$1
    git log --author="${author}" --pretty=tformat: --numstat \
        | gawk "{ add += \$1 ; subs += \$2 ; loc += \$1 - \$2 } END { printf \"Author: ${author} added lines: %s removed lines: %s total lines: %s\n\",add,subs,loc }" -
}

############
##  Grep  ##
############

alias g="grep -i --color=auto"
alias gr="grep -ir --color=auto"
alias gv="grep -v -i --color=auto"
alias gn="grep -nH -i --color=auto"

alias xg="xargs -n1"

######################
##  Man-pages|less  ##
######################

# lesspipe stopped showing colors in terminal, use pygments instead
#export LESSQUIET=1
#export LESSOPEN="| /opt/homebrew/bin/lesspipe.sh %s" LESS_ADVANCED_PREPROCESSOR=1
#export LESSOPEN="| ~/.lesscolor %s"
export LESSOPEN="|/opt/homebrew/bin/lesspipe.sh %s"
export LESSCOLORIZER="source-highlight"
export LESS_ADVANCED_PREPROCESSOR=1
export LESS='-R -i -X'

alias lessl='less -N'

#man pages with color.
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m' # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
# #less with colours:
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# bash magic to call functions defined here
# e.g. source ~/.bashrc activate_venv
#"$@"
